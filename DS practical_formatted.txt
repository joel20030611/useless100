PRACTICAL NO: 01

**Reversing array Code**

\#include<iostream.h>

\#include<conio.h>

void main()

{
    
    int a\[10],i,j,t;
    
    clrscr();
    
    cout<<"nEnter 10 numbers:";
    
    for(i=0;i<10;i++)
    
    {
        
        cin>>a\[i];
        
    }
    
    cout<<"\\n\\nArray elements before reversing\\n";
    
    for(i=0;i<10;i++)
    
    {
        
        cout<<" "<<a\[i]<<"\\t";
        
    }
    
    cout<<"\\n\\n\\nArray elements after reversing\\n";
    
    for(i=9;i>=0;i--)
    
    {
        
        cout<<" "<<a\[i]<<"\\t";
        
    }
    
    getch();
    
}

**Searching in array Code**

\#include<iostream.h>

\#include<conio.h>

int main()

{
    
    clrscr();
    
    int a\[10], i, b;
    
    cout<<"\\n Enter 10 numbers:";
    
    for(i=0;i<10;i++)
    
    {
        
        cin>>a\[i];
        
    }
    
    cout<<"\\n Enter the value to be search in an array:";
    
    cin>>b;
    
    cout<<"\\n\\n\\n Array Elements \\n";
    
    for(i=0;i<10;i++)
    
    {
        
        cout<<" "<<a\[i]<<"\\t";
        
    }
    
    for(i=0;i<10;i++)
    
    {
        
        if(a\[i]==b)
        
        break;
        
    }
    
    if(i<10)
    
    {
        
        cout<<"\\n"<<b<<" Found at Position "<<i+1;
        
    }
    
    else
    
    {
        
        cout<<"\\n Value not found in an array ";
        
    }
    
    getch();
    
}

PRACTICAL NO : 02

**Sorting array Code**

\#include<iostream.h>

\#include<conio.h>

int main()

{
    
    clrscr();
    
    int a\[10],i,j,t;
    
    cout<<"\\n Enter 10 numbers:";
    
    for(i=0;i<10;i++)
    
    {
        
        cin>>a\[i];
        
    }
    
    cout<<"\\n\\n\\n Array Elements Before Sorting:\\n";
    
    for(i=0;i<10;i++)
    
    {
        
        cout<<" "<<a\[i]<<"\\t";
        
    }
    
    for(i=0;i<9;i++)
    
    {
        
        for(j=i+1;j<10;j++)
        
        {
            
            if(a\[i]>a\[j])
            
            {
                
                t=a\[i];
                
                a\[i]=a\[j];
                
                a\[j]=t;
                
            }
            
        }
        
    }
    
    cout<<"\\n\\n\\n Array Elements After Sorting:\\n";
    
    for(i=0;i<10;i++)
    
    {
        
        cout<<" "<<a\[i]<<"\\t";
        
    }
    
    getch();
    
}

**Merge array Code**

\#include<iostream.h>

\#include<conio.h>

\#define MAX 50

void sort(int m\[MAX], int n)

{
    
    int i,j,temp;
    
    for(i=0;i<n-1;i++)
    
    {
        
        for(j=i+1;j<n;j++)
        
        {
            
            if(m\[i]>m\[j])
            
            {
                
                temp=m\[i];
                
                m\[i]=m\[j];
                
                m\[j]=temp;
                
            }
            
        }
        
    }
    
}

int main()

{
    
    clrscr();
    
    int a\[MAX],b\[MAX],res\[MAX\*2];
    
    int i,j,k,n1,n2;
    
    cout<<"\\nEnter no of elements in 1st array..elements must be <=50:";
    
    cin>>n1;
    
    cout<<"\\nEnter "<<n1<<" elements in array1:\\n";
    
    for(i=0;i<n1;i++)
    
    {
        
        cin>>a\[i];
        
    }
    
    cout<<"\\n\\nEnter no of elements in 2nd array..elements must be <=50:";
    
    cin>>n2;
    
    cout<<"\\n\\nEnter "<<n2<<" elements in array2:\\n";
    
    for(i=0;i<n2;i++)
    
    {
        
        cin>>b\[i];
        
    }
    
    //sort array a \& array b
    
    sort(a,n1);
    
    sort(b,n2);
    
    cout<<"\\nElements of 1st array:\\n";
    
    for(i=0;i<n1;i++)
    
    {
        
        cout<<a\[i]<<"\\t";
        
    }
    
    cout<<"\\n\\nElements of 2nd array:\\n";
    
    for(i=0;i<n2;i++)
    
    {
        
        cout<<b\[i]<<"\\t";
        
    }
    
    i=0;j=0;k=0;
    
    while(i<n1 \&\& j<n2)
    
    {
        
        if(a\[i]<=b\[j])
        
        {
            
            res\[k]=a\[i];
            
            i++;
            
            k++;
            
        }
        
        else
        
        {
            
            res\[k]=b\[j];
            
            j++;
            
            k++;
            
        }
        
    }
    
    while(i<n1)
    
    {
        
        res\[k]=a\[i];
        
        i++;
        
        k++;
        
    }
    
    while(j<n2)
    
    {
        
        res\[k]=b\[j];
        
        k++;
        
        j++;
        
    }
    
    // To display merged array
    
    cout<<"\\n\\nMerged Array:\\n";
    
    for(i=0;i<n1+n2;i++)
    
    {
        
        cout<<res\[i]<<"\\t";
        
    }
    
    getch();
    
}

PRACTICAL NO : 03

**Matrix Addition Code**

\#include<iostream.h>

\#include<conio.h>

int main()

{
    
    clrscr();
    
    int a\[3]\[3],b\[3]\[3],c\[3]\[3],i,j;
    
    cout<<"\\n Enter nine elements for matrix A:";
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            cin>>a\[i]\[j];
            
        }
        
    }
    
    cout<<"\\n Enter nine elements for matrix B:";
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            cin>>b\[i]\[j];
            
        }
        
    }
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            c\[i]\[j]=a\[i]\[j]+b\[i]\[j];
            
        }
        
    }
    
    cout<<"\\n Matrix A + Matrix B = Matrix C\\n";
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            cout<<a\[i]\[j]<<"\\t";
            
        }
        
        cout<<"\\t";
        
        for(int k=0;k<3;k++)
        
        {
            
            cout<<b\[i]\[k]<<"\\t";
            
        }
        
        cout<<"\\t";
        
        for(int n=0;n<3;n++)
        
        {
            
            cout<<c\[i]\[n]<<"\\t";
            
        }
        
        cout<<"\\n";
        
    }
    
    getch();
    
}

**Matrix Multiplication Code**

\#include<iostream.h>

\#include<conio.h>

int main()

{
    
    clrscr();
    
    int a\[3]\[3],b\[3]\[3],c\[3]\[3],i,j,k,sum;
    
    cout<<"\\n Enter nine elements for matrix A:";
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            cin>>a\[i]\[j];
            
        }
        
    }
    
    cout<<"\\n Enter nine elements for matrix B:";
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            cin>>b\[i]\[j];
            
        }
        
    }
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            sum=0;
            
            for(k=0;k<3;k++)
            
            {
                
                sum=sum+a\[i]\[k]\*b\[k]\[j];
                
            }
            
            c\[i]\[j]=sum;
            
        }
        
    }
    
    cout<<"\\n Matrix A \* Matrix B = Matrix C\\n";
    
    for(i=0;i<3;i++)
    
    {
        
        for(j=0;j<3;j++)
        
        {
            
            cout<<a\[i]\[j]<<"\\t";
            
        }
        
        cout<<"\\t";
        
        for(k=0;k<3;k++)
        
        {
            
            cout<<b\[i]\[k]<<"\\t";
            
        }
        
        cout<<"\\t";
        
        for(int n=0;n<3;n++)
        
        {
            
            cout<<c\[i]\[n]<<"\\t";
            
        }
        
        cout<<"\\n";
        
    }
    
    getch();
    
}

PRACTICAL NO : 04

**Single Linked List Code**

\#include<iostream.h>

\#include<conio.h>

\#include<stdlib.h>

class node

{
    
    public:
    
    int data;
    
    node\* next;
    
    void create();
    
    void display();
    
    void reverse();
    
    };
    
    node \* temp = NULL, \*ptr = NULL, \*begin1= NULL, \*ptt=NULL;
    
    void node::create()
    
    {
        
        int y;
        
        if(begin1!=NULL)
        
        cout<<"\\nList is already created\\n";
        
        else
        
        {
            
            y=1;
            
            while(y==1)
            
            {
                
                temp=new node;
                
                temp->next=NULL;
                
                cout<<"\\nEnter a value:";
                
                cin>>temp->data;
                
                if(begin1==NULL)
                
                {
                    
                    begin1=ptr=temp;
                    
                }
                
                else
                
                {
                    
                    ptr->next=temp;
                    
                    ptr=temp;
                    
                }
                
                cout<<"Do you want to create more nodes(1/0):";
                
                cin>>y;
                
            }
            
        }
        
    }
    
    void node::display()
    
    {
        
        if(begin1==NULL)
        
        cout<<"\\n\\n\\nNo elements in the list to display\\n\\nPress enter to return to menu";
        
        else
        
        {
            
            cout<<"\\n\\nList Elements are:\\n";
            
            temp=begin1;
            
            while(temp!=NULL)
            
            {
                
                cout<<"\\n\\t"<<temp->data;
                
                temp=temp->next;
                
            }
            
        }
        
    }
    
    void node::reverse()
    
    {
        
        ptr=begin1;
        
        temp=NULL;
        
        ptt=NULL;
        
        while(ptr!=NULL)
        
        {
            
            temp=ptr->next;
            
            ptr->next=ptt;
            
            ptt=ptr;
            
            ptr=temp;
            
        }
        
        begin1=ptt;
        
        node n;
        
        n.display();
        
    }
    
    int main()
    
    {
        
        clrscr();
        
        int ch, y=1;
        
        node n;
        
        while(1)
        
        {
            
            cout<<"\\n\\n\\n\\n\\t\\tMain Menu\\n";
            
            cout<<"\\n\\t1.Create the list\\n";
            
            cout<<"\\n\\t2.Display the list elements\\n";
            
            cout<<"\\n\\t3.Display the list elemets in Reverse order\\n";
            
            //cout<<"\\n\\t3.search an elements in the list\\n";
            
            cout<<"\\n\\t4.exit\\n";
            
            cout<<"\\n\\tEnter your choice:";
            
            cin>>ch;
            
            switch(ch)
            
            {
                
                case 1:
                
                n.create();
                
                break;
                
                case 2:
                
                n.display();
                
                getch();
                
                break;
                
                case 3:
                
                n.reverse();
                
                getch();
                
                break;
                
                case 4:
                
                exit(0);
                
                default:
                
                cout<<"\\n\\n\\n\\nInvalid choice entered.NoPress any key to return ";
                
                break;
                
            }
            
        }
        
        getch();
        
    }
    
    PRACTICAL NO : 05
    
    **Double Linked List Code**
    
    \#include<iostream.h>
    
    \#include<conio.h>
    
    \#include<stdlib.h>
    
    class node
    
    {
        
        public:
        
        node \*pre;
        
        int data;
        
        node \*next;
        
        void create();
        
        void display();
        
        void sort();
        
        };
        
        node \*begin1=NULL, \*temp=NULL, \*ptr=NULL, \*ptt=NULL;
        
        void node::create()
        
        {
            
            int y;
            
            if(begin1!=NULL)
            
            cout<<"\\nList is already created\\n";
            
            else
            
            {
                
                y=1;
                
                while(y==1)
                
                {
                    
                    temp=new node;
                    
                    temp->pre=NULL;
                    
                    temp->next=NULL;
                    
                    cout<<"\\nEnter a value:";
                    
                    cin>>temp->data;
                    
                    if(begin1==NULL)
                    
                    {
                        
                        begin1=ptr=temp;
                        
                    }
                    
                    else
                    
                    {
                        
                        ptr->next=temp;
                        
                        temp->pre=ptr;
                        
                        ptr=temp;
                        
                    }
                    
                    cout<<"Do you want to create more nodes(1/0):";
                    
                    cin>>y;
                    
                }
                
            }
            
        }
        
        void node::display()
        
        {
            
            if(begin1==NULL)
            
            cout<<"\\n\\n\\nNo elements in the list to display\\n\\nPress enter to return to menu";
            
            else
            
            {
                
                ptr=begin1;
                
                cout<<"\\n\\n\\n List elements are:\\n";
                
                while(ptr!=NULL)
                
                {
                    
                    cout<<"\\n\\t"<<ptr->data;
                    
                    ptr=ptr->next;
                    
                }
                
            }
            
        }
        
        void node::sort()
        
        {
            
            int t;
            
            if(begin1==NULL)
            
            cout<<"\\n There are no elements to the List:";
            
            else
            
            {
                
                ptr=begin1;
                
                while(ptr!=NULL)
                
                {
                    
                    temp=ptr->next;
                    
                    while(temp!=NULL)
                    
                    {
                        
                        if(ptr->data>temp->data)
                        
                        {
                            
                            t=ptr->data;
                            
                            ptr->data=temp->data;
                            
                            temp->data=t;
                            
                        }
                        
                        temp=temp->next;
                        
                    }
                    
                    ptr=ptr->next;
                    
                }
                
                cout<<"\\n\\n\\n\\t List sorted successfully\\n";
                
            }
            
        }
        
        int main()
        
        {
            
            clrscr();
            
            int ch,y=1;
            
            node n;
            
            while(1)
            
            {
                
                cout<<"\\n\\n\\n\\n\\t\\tMain Menu\\n";
                
                cout<<"\\n\\t1.Create the Double Linked List\\n";
                
                cout<<"\\n\\t2.Display the list elements\\n";
                
                cout<<"\\n\\t3.sorting the list\\n";
                
                cout<<"\\n\\t4.exit\\n";
                
                cout<<"\\n\\tEnter your choice:\\n";
                
                cin>>ch;
                
                switch(ch)
                
                {
                    
                    case 1:
                    
                    n.create();
                    
                    break;
                    
                    case 2:
                    
                    n.display();
                    
                    getch();
                    
                    break;
                    
                    case 3:
                    
                    n.sort();
                    
                    getch();
                    
                    break;
                    
                    case 4:
                    
                    exit(0);
                    
                    default:
                    
                    cout<<"\\n\\n\\n\\nInvalid choice entered.\\nPress any key to return ";
                    
                    break;
                    
                }
                
            }
            
            getch();
            
        }
        
        PRACTICAL NO : 06
        
        **Stack Code**
        
        \#include<iostream.h>
        
        \#include<conio.h>
        
        \#include<stdlib.h>
        
        void push();
        
        void pop();
        
        void display();
        
        int a\[5], top = -1, ch, n;
        
        int main ()
        
        {
            
            clrscr();
            
            while (1)
            
            {
                
                cout << "\\n\\n1: Push an element in the stack";
                
                cout << "\\n2: Pop an element from the stack";
                
                cout << "\\n3: Display the stack";
                
                cout << "\\n4: Exit";
                
                cout << "\\n\\nEnter your choice: ";
                
                cin >> ch;
                
                switch (ch)
                
                {
                    
                    case 1:
                    
                    push();
                    
                    break;
                    
                    case 2:
                    
                    pop();
                    
                    break;
                    
                    case 3:
                    
                    display();
                    
                    getch();
                    
                    break;
                    
                    case 4:
                    
                    exit(0);
                    
                    default:
                    
                    cout << "\\nWrong option selected!!!";
                    
                }
                
            }
            
        }
        
        void push()
        
        {
            
            int val;
            
            if (top == 4)
            
            {
                
                cout << "Stack Overflow";
                
            }
            
            else
            
            {
                
                cout << "Enter value to push: ";
                
                cin >> val;
                
                top++;
                
                a\[top] = val;
                
            }
            
        }
        
        void pop()
        
        {
            
            if (top == -1)
            
            {
                
                cout << "Stack UnderFlow";
                
            }
            
            else
            
            {
                
                cout << "Popped element is " << a\[top];
                
                top--;
                
            }
            
        }
        
        void display()
        
        {
            
            if (top == -1)
            
            {
                
                cout << "Stack is empty";
                
            }
            
            else
            
            {
                
                cout << "Stack elements are: ";
                
                for (int i = top; i >= 0; i--)
                
                {
                    
                    cout << a\[i] << " ";
                    
                }
                
            }
            
        }
        
        PRACTICAL NO : 07
        
        **Queue Code**
        
        \#include<iostream.h>
        
        \#include<conio.h>
        
        \#include<stdlib.h>
        
        int a\[50];
        
        int rear=-1;
        
        int front=-1;
        
        void insert()
        
        {
            
            int i;
            
            if(rear==49)
            
            {
                
                cout<<"\\n Queue Overflow";
                
                return;
                
            }
            
            else
            
            {
                
                if(front==-1)
                
                front=0;
                
                cout<<"\\n Enter the elements to add in Queue:";
                
                cin>>i;
                
                rear=rear+1;
                
                a\[rear]=i;
                
            }
            
        }
        
        void del()
        
        {
            
            if(front==-1 || front>rear)
            
            {
                
                cout<<"\\n Queue underflow";
                
                return;
                
            }
            
            else
            
            {
                
                cout<<"\\n Elements deleted from queue:"<<a\[front];
                
                front=front+1;
                
            }
            
        }
        
        void display()
        
        {
            
            int i;
            
            if(front==-1 || front>rear)
            
            {
                
                cout<<"\\n Queue is empty";
                
            }
            
            else
            
            {
                
                cout<<"\\n Queue is:\\n";
                
                for(i=front;i<=rear;i++)
                
                {
                    
                    cout<<"\\n"<<a\[i];
                    
                }
                
            }
            
        }
        
        int main()
        
        {
            
            clrscr();
            
            int ch;
            
            while(1)
            
            {
                
                cout<<"\\n 1.Insert element in queue";
                
                cout<<"\\n 2.Delete element from queue";
                
                cout<<"\\n 3.Display queue";
                
                cout<<"\\n 4.Quit";
                
                cout<<"\\n Enter your choice";
                
                cin>>ch;
                
                switch(ch)
                
                {
                    
                    case 1:
                    
                    insert();
                    
                    break;
                    
                    case 2:
                    
                    del();
                    
                    getch();
                    
                    break;
                    
                    case 3:
                    
                    display();
                    
                    getch();
                    
                    break;
                    
                    case 4:
                    
                    exit(1);
                    
                    default:
                    
                    cout<<"\\n Wrong choice";
                    
                }
                
            }
            
            getch();
            
        }
        
        PRACTICAL NO : 08
        
        **Bubble Sorting Code**
        
        \#include<stdio.h>
        
        \#include<conio.h>
        
        \#include<iostream.h>
        
        int main()
        
        {
            
            clrscr();
            
            int n, \*p;
            
            int i,j,t;
            
            cout<<"Enter the size of the array: \\n";
            
            cin>>n;
            
            p=new int\[n];
            
            cout<<"\\n\\nEnter "<<n<<" elements \\n";
            
            for(i=0;i<n;i++)
            
            {
                
                cin>>p\[i];
                
            }
            
            cout<<"\\nElements before bubble sorting\\n";
            
            for(i=0;i<n;i++)
            
            {
                
                cout<<p\[i]<<" \\t";
                
            }
            
            for(i=0;i<n-1;i++)
            
            {
                
                for(j=n-1;j>i;j--)
                
                {
                    
                    if(p\[j-1]>p\[j])
                    
                    {
                        
                        t=p\[j];
                        
                        p\[j]=p\[j-1];
                        
                        p\[j-1]=t;
                        
                    }
                    
                }
                
            }
            
            cout<<"\\n\\nElements after bubble sorting\\n";
            
            for(i=0;i<n;i++)
            
            {
                
                cout<<p\[i]<<"\\t";
                
            }
            
            getch();
            
        }
        
        PRACTICAL NO : 09
        
        **Insertion Sort Code**
        
        \#include<stdio.h>
        
        \#include<conio.h>
        
        \#include<iostream.h>
        
        int main()
        
        {
            
            clrscr();
            
            int n, \*p;
            
            int i,t,ptr;
            
            cout<<"\\n Enter the size of the array: ";
            
            cin>>n;
            
            p=new int\[n];
            
            cout<<"\\n\\nEnter "<<n<<" elements\\n";
            
            for(i=1;i<n;i++)
            
            {
                
                cin>>p\[i];
                
            }
            
            cout<<"\\nElements before insertion sort\\n";
            
            p\[0]=0;
            
            for(i=1;i<n;i++)
            
            {
                
                cout<<p\[i]<<"\\t";
                
            }
            
            for(i=1;i<n;i++)
            
            {
                
                t=p\[i];
                
                ptr=i-1;
                
                while(t<p\[ptr])
                
                {
                    
                    p\[ptr+1]=p\[ptr];
                    
                    ptr--;
                    
                }
                
                p\[ptr+1]=t;
                
            }
            
            cout<<"\\nElements after insertion sort\\n";
            
            for(i=1;i<n;i++)
            
            {
                
                cout<<p\[i]<<"\\t";
                
            }
            
            getch();
            
        }
        
        PRACTICAL NO : 10
        
        **Selection Sort Code**
        
        \#include<stdio.h>
        
        \#include<conio.h>
        
        \#include<iostream.h>
        
        int main()
        
        {
            
            clrscr();
            
            int n, \*p;
            
            int i,j,t,small,pos;
            
            cout<<"\\n Enter the size of the array: ";
            
            cin>>n;
            
            p=new int\[n];
            
            cout<<"\\n\\nEnter "<<n<<" elements\\n";
            
            for(i=0;i<n;i++)
            
            {
                
                cin>>p\[i];
                
            }
            
            cout<<"\\nElements before selection sort\\n";
            
            for(i=0;i<n;i++)
            
            {
                
                cout<<p\[i]<<"\\t";
                
            }
            
            for(i=0;i<n;i++)
            
            {
                
                small=p\[i];
                
                pos=i;
                
                for(j=i+1;j<n;j++)
                
                {
                    
                    if(small>p\[j])
                    
                    {
                        
                        small=p\[j];
                        
                        pos=j;
                        
                    }
                    
                }
                
                if(pos!=i)
                
                {
                    
                    t=p\[i];
                    
                    p\[i]=p\[pos];
                    
                    p\[pos]=t;
                    
                }
                
            }
            
            cout<<"\\nElements after selection sort\\n";
            
            for(i=0;i<n;i++)
            
            {
                
                cout<<p\[i]<<"\\t";
                
            }
            
            getch();
            
        }
        
        **Searching for a node in a link list**
        
        \#include <iostream.h>
        
        \#include <conio.h>
        
        \#include <stdlib.h>
        
        class node
        
        {
            
            int data;
            
            node \*next;
            
            
            
            public:
            
            void create();
            
            void display();
            
            void search();
            
            };
            
            // Global Pointers
            
            node \*temp, \*new\_node, \*ptr = NULL, \*begin1 = NULL, \*PTT = NULL;
            
            void node::create()
            
            {
                
                int y;
                
                
                
                if (begin1 != NULL) {
                    
                    cout << "\\n\\nList is already created\\n";
                    
                    } else {
                        
                        y=1;
                        
                        while (y == 1) {
                            
                            temp = new node;
                            
                            temp->next = NULL;
                            
                            
                            
                            cout << "\\n Enter a value: ";
                            
                            if (begin1 == NULL) {
                                
                                begin1 = ptr = temp;
                                
                                } else {
                                    
                                    ptr->next = temp;
                                    
                                    ptr = temp;
                                    
                                }
                                
                                cout << "\\nDo you want to create more nodes (1/0): ";
                                
                                cin >> y;
                                
                            }
                            
                        }
                        
                    }
                    
                    void node::display()
                    
                    {
                        
                        if (begin1 == NULL) {
                            
                            cout << "\\n\\n\\tNo elements in the list to display\\n\\t Press enter to return to the main menu...";
                            
                            } else {
                                
                                cout << "\\n\\nList Elements are: ";
                                
                                temp = begin1;
                                
                                while (temp != NULL) {
                                    
                                    cout << "\\n\\t" << temp->data;
                                    
                                    temp = temp->next;
                                    
                                }
                                
                            }
                            
                        }
                        
                        void node::search()
                        
                        {
                            
                            int n;
                            
                            if (begin1 == NULL) {
                                
                                cout << "\\n\\nThere are no elements in the list";
                                
                                void node::search() {
                                    
                                    int n;
                                    
                                    if (begin1 == NULL) {
                                        
                                        cout << "\\n\\n\\tThere are no elements in the list";
                                        
                                        } else {
                                            
                                            cout << "\\n\\n Enter the value to be searched in the list: ";
                                            
                                            cin >> n;
                                            
                                            ptr = begin1;
                                            
                                            while (ptr != NULL) {
                                                
                                                if (ptr->data == n) {
                                                    
                                                    cout << "\\nSearch value found!";
                                                    
                                                    break;
                                                    
                                                }
                                                
                                                ptr = ptr->next;
                                                
                                            }
                                            
                                            if (ptr == NULL) {
                                                
                                                cout << "\\nSearch value not found in the list\\n";
                                                
                                            }
                                            
                                        }
                                        
                                    }